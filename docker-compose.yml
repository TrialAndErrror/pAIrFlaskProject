version: '3'

services:
  handler:
    build:
      context: handler
      dockerfile: Dockerfile
    command: ["gunicorn", "--bind", ":8000", "--reload", "handler.wsgi:app"]
    depends_on:
      - journal
      - feeding_calc
    ports:
      - "${HANDLER_PORT}:8000"
    volumes:
      - ./handler:/app/handler
  journal:
    build:
      context: journal
      dockerfile: Dockerfile
    command: [ "gunicorn", "--bind", ":8000", "--reload", "journal.wsgi:app" ]
    ports:
      - "${JOURNAL_PORT}:8000"
    volumes:
      - ./journal:/app/journal
  feeding_calc:
    build:
      context: feeding_calc
      dockerfile: Dockerfile
    command: [ "gunicorn", "--bind", ":8000", "--reload", "feeding_calc.wsgi:app" ]
    restart: always       # Included because it can crash if it fails to connect to DB
    ports:
      - "${FEEDING_CALC_PORT}:8000"
    volumes:
      - ./feeding_calc:/app/feeding_calc
    depends_on:
      - feeding_calc_db
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=feeding_calc_db
      - POSTGRES_PORT=5432
  temperature:
    build:
      context: temperature
      dockerfile: Dockerfile
    command: [ "gunicorn", "--bind", ":8000", "--reload", "temperature.wsgi:app" ]
    restart: always       # Included because it can crash if it fails to connect to DB
    ports:
      - "${TEMPERATURE_PORT}:8000"
    volumes:
      - ./temperature:/app/temperature
    depends_on:
      - temperature_db
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=temperature_db
      - POSTGRES_PORT=5432
  frontend:
    build:
      context: react-frontend
      dockerfile: Dockerfile
    depends_on:
      - temperature
      - feeding_calc
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./react-frontend:/app/react-frontend
  nginx:
    build: ./nginx
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - handler
      - temperature
  temperature_db:
    image: postgres
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=temperature_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/temperature_data
  feeding_calc_db:
    image: postgres
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=feeding_calc_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5432"]
    volumes:
      - feeding_calc_data:/var/lib/postgresql/feeding_calc_data

volumes:
  postgres_data:
  feeding_calc_data: